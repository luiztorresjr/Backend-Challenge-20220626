# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    container_name: webscraping
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_ENVIRONMENT_PORT=8080
      - MONGODB__ConnectionURI=mongodb://admin:password@localhost:27017
      - MONGODB__DatabaseName=Challenge
      - MONGODB__CollectionName=Products
    build:
      context: .
      target: final
      dockerfile: ./dockerfile
    depends_on:
      - mongo
    restart: always
    ports:
      - 8080:8080 
      - 8081:8081
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - "~/mongo-entrypoint/:/docker-entrypoint-initdb.d/"
    command: mongod
  