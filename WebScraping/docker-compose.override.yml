# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - 27017:27017
    volumes:
      - "~/mongo-entrypoint/:/docker-entrypoint-initdb.d/"
    command: [mongod, --auth]
    networks:
      - webscraping-net
  cache:
    image: redis
    container_name: cache
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning 
    volumes: 
      - cache:/data
    networks:
      - webscraping-net
  server:
    image: webscraping
    container_name: webscraping
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - MongoDB__ConnectionURI=mongodb://admin:password@localhost:27017?authSource=admin
      - MongoDB__DatabaseName=Challenge
      - MongoDB__CollectionName=Products
      - ASPNETCORE_URLS=https://+:8081;http://+:8080
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - Redis__Host=localhost
      - Redis__ConnectionString=localhost:6379
      - Redis__Port=6379
    volumes:
      - ~/.aspnet/https:/https:ro
    ports:
      - 8080:8080
      - 8081:8081
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - mongo
      - cache
    expose:
      - 8080
      - 8081
    networks:
      - webscraping-net
volumes:
  cache:
    driver: local
networks:
  webscraping-net: